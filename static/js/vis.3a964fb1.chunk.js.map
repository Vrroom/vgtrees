{"version":3,"sources":["utils/reacthelpers.js","../../node_modules/tslib/tslib.es6.js","../../node_modules/throttle-debounce/dist/index.esm.js","vis/graphicdisplay.jsx","utils/post.js","vis/App.js","vis/index.js","utils/misc.js","utils/svgtags.js","utils/svg.js"],"names":["propertiesToCamelCase","node","properties","rest","newKeys","Object","keys","map","camelCase","oldValues","values","newProperties","i","length","key","val","node2ReactElement","children","React","createElement","tagName","uuidv4","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","n","arguments","prototype","call","apply","this","delay","noTrailing","callback","debounceMode","timeoutID","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","self","elapsed","Date","now","args","exec","clear","undefined","setTimeout","cancel","__","constructor","create","GraphicDisplay","Component","graphicElements","paths","defs","props","graphic","elements","path","concat","id","splice","render","svg","async","postData","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","App","super","fetchMoreData","svgs","state","startId","number","then","res","setState","prevState","componentDidMount","Container","Row","className","Col","InfiniteScroll","dataLength","next","hasMore","loader","chunk","group","gkey","preprocessSVG","ReactDOM","document","getElementById","isUndef","thing","svgTags","extractDims","dim","replace","extractViewBox","vb","split","parseFloat","getWidthHeight","height","width","viewBox","findBBox","svgElement","createElementNS","setAttribute","appendChild","pathElement","pathBox","lastChild","getBoundingClientRect","x","y","pt","convertCoordinates","di","elementId","ctm","getScreenCTM","a","convertDimensions","removeChild","remove","degenerateBBox","bbox","svgString","parseTree","parse","tree","stack","helper","push","reduceRight","includes","forEach","pop","slice","flattenTree","bboxes","filter","_","treeMap","fn","c","h","w","max","Math","normalizeGraphic","coveringBBox","min","maxX","distance","sqrt","e","f","isStyleNotNone","styleProperty","style","toLowerCase"],"mappings":"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","file":"static/js/vis.3a964fb1.chunk.js","sourcesContent":["/**\n * @file Helper functions for React\n *\n * @author Sumit Chaturvedi\n */\nimport React from \"react\";\nimport { camelCase } from \"lodash\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/**\n * Convert all properties to camel case.\n *\n * SVG attributes usually have an hyphen in the\n * middle. This is not allowed when we use them \n * as React components.\n *\n * @param   {Object}  node - A node in the SVG parse tree\n *\n * @return  {Object}  Node with property names changed\n * to camel case.\n */\nfunction propertiesToCamelCase(node) {\n  let { properties, ...rest } = node;\n  if (!properties) {\n    return rest;\n  }\n  let newKeys = Object.keys(properties).map(camelCase);\n  let oldValues = Object.values(properties);\n  let newProperties = {};\n  for (let i = 0; i < oldValues.length; i++) {\n    const key = newKeys[i];\n    const val = oldValues[i];\n    newProperties[key] = val;\n  }\n  return { ...rest, properties: newProperties };\n}\n\nfunction node2ReactElement (node) { \n  let children = [];\n  if (typeof node.children !== \"undefined\") {\n    children = node.children.map(node2ReactElement);\n  }\n  return React.createElement(\n    node.tagName,\n    {\n      ...node.properties,\n      key: uuidv4()\n    },\n    children\n  );\n}\n\nexport {\n  propertiesToCamelCase,\n  node2ReactElement\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}   [noTrailing]   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset)\n * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {Boolean}   [debounceMode] If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @return {Function}  A new, throttled, function.\n */\nfunction throttle (delay, noTrailing, callback, debounceMode) {\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel() {\n    clearExistingTimeout();\n    cancelled = true;\n  } // `noTrailing` defaults to falsy.\n\n\n  if (typeof noTrailing !== 'boolean') {\n    debounceMode = callback;\n    callback = noTrailing;\n    noTrailing = undefined;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n    var args = arguments;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, args);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      /*\n       * In throttle mode, if `delay` time has been exceeded, execute\n       * `callback`.\n       */\n      exec();\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}  [atBegin]     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @return {Function} A new, debounced function.\n */\n\nfunction debounce (delay, atBegin, callback) {\n  return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\n}\n\nexport { throttle, debounce };\n","/**\n * @file GraphicDisplay class implementation.\n *\n * @author Sumit Chaturvedi\n */\nimport React, { Component } from \"react\";\nimport { node2ReactElement } from \"../utils/reacthelpers\";\n\nclass GraphicDisplay extends Component {\n  /**\n   * Create React Elements for SVG paths.\n   *\n   * @returns {Array}   List of graphic elements as React Elements.\n   */\n  graphicElements = () => {\n    const { paths, defs } = this.props.graphic;\n    const elements = paths.map((path, key) => {\n      return (\n        <g key={`path-group-${key}`}>\n          {React.createElement(path.tagName, {\n              ...path.properties,\n              id: `path-${key}`,\n          })}\n        </g>\n      );\n    });\n    if (typeof defs !== \"undefined\") {\n      elements.splice(0, 0, node2ReactElement(defs));\n    }\n    return elements;\n  };\n\n  render() {\n    const { svg } = this.props.graphic;\n    const children = this.graphicElements();\n    return React.createElement(\n      svg.tagName,\n      { ...svg.properties, id: \"svg-element\" },\n      children\n    );\n  }\n}\n\nexport default GraphicDisplay;\n\n","import { isUndef } from \"./misc\"; \n\nasync function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\nasync function postN (N=1, url = '', data = []) {\n  const responses = [];\n  for (let i = 0; i < N; i += 1) {\n    let dataPt = data[i];\n    if (isUndef(dataPt)) {\n      dataPt = {};\n    }\n    const res = await postData(url, dataPt); \n    responses.push(res);\n  }\n  return responses;\n}\n\nfunction postCurrentTime (data) {\n  const now = new Date();\n  const dd = now.getDate();\n  const mm = now.getMonth();\n  const yyyy = now.getFullYear();\n  const hrs = now.getHours();\n  const min = now.getMinutes();\n  const sec = now.getSeconds();\n  postData(\"/time\", {\n    dd,\n    mm,\n    yyyy,\n    hrs,\n    min,\n    sec,\n    ...data\n  });\n}\n\nexport {\n  postData, \n  postN, \n  postCurrentTime\n}; \n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport GraphicDisplay from \"./graphicdisplay\";\nimport { postData } from \"../utils/post\";\nimport { preprocessSVG } from \"../utils/svg\";\nimport { chunk } from \"lodash\";\n\nconst N = 25;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { svgs: [] };\n  }\n\n  componentDidMount() {\n    this.fetchMoreData();\n  }\n\n  fetchMoreData = () => {\n    const { svgs } = this.state;\n    postData(\"/emoji-dataset\", { startId: svgs.length, number: N }).then(\n      (res) => {\n        this.setState((prevState) => {\n          const { svgs } = prevState;\n          return { svgs: svgs.concat(res.svgs) };\n        });\n      }\n    );\n  };\n\n  render() {\n    const { svgs } = this.state;\n    return (\n      <Container>\n        <Row className=\"p-3 border-bottom\">\n          <Col>\n            <h1>Interesting OpenMoji Graphics</h1>\n          </Col>\n        </Row>\n        <InfiniteScroll\n          dataLength={svgs.length}\n          next={this.fetchMoreData}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >\n          {chunk(svgs, 5).map((group, gkey) => (\n            <Row>\n              {group.map((svg, key) => (\n                <Col key={`svg-${gkey}-${key}`}>\n                  <GraphicDisplay graphic={preprocessSVG(svg)} />\n                </Col>\n              ))}\n            </Row>\n          ))}\n        </InfiniteScroll>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/style.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","function isUndef (thing) {\n  return typeof thing === \"undefined\"; \n}\n\nexport { isUndef }; \n","/**\n * @file Tags for all the graphic elements in an SVG.\n *\n * @author Sumit Chaturvedi\n */\n\nconst svgTags = [\n  \"circle\",\n  \"ellipse\",\n  \"image\",\n  \"line\",\n  \"mesh\",\n  \"path\",\n  \"polygon\",\n  \"polyline\",\n  \"rect\",\n  \"text\",\n  \"use\"\n];\n\nexport { svgTags };\n","/**\n * @file Functions related the SVGs.\n *\n * @author Sumit Chaturvedi\n */\nimport { svgTags } from \"./svgtags\";\nimport { parse } from \"svg-parser\";\nimport { propertiesToCamelCase } from \"./reacthelpers\";\n\n/**\n * Calculate the height or width from the SVG \n * document property. \n *\n * It is possible that the units are in px. This\n * convenience function extracts all the digits.\n *\n * @param   {Object}  dim - SVG document property for either\n * width or height.\n * \n * @return  {Number}  Extracted width or height value.\n */\nfunction extractDims(dim) {\n  if (typeof dim === \"string\") {\n    return dim.replace(/\\D/g, \"\");\n  } else {\n    return dim;\n  }\n}\n\n/**\n * Parse the SVG document's viewbox.\n *\n * @param   {string}  vb - Viewbox of the SVG.\n *\n * @return  {Object}  List of 4 numbers specifying the \n * viewbox.\n */\nfunction extractViewBox(vb) {\n  return vb.split(/ |,|, /).map(parseFloat);\n}\n\n/**\n * Calculate the width and height of the SVG document.\n *\n * @param   {Object}  props - SVG document properties. \n *\n * @return  {Object}  { width, height } as numbers.\n */\nfunction getWidthHeight(props) {\n  let height, width;\n  if (props.height) {\n    height = extractDims(props.height);\n  }\n  if (props.width) {\n    width = extractDims(props.width);\n  }\n  if (!props.height && !props.width) {\n    const vb = extractViewBox(props.viewBox);\n    width = vb[2] - vb[0];\n    height = vb[3] - vb[1];\n  }\n  return { width, height };\n}\n\n/**\n * Modify the graphic such that the SVG's viewbox \n * is a square and the original graphic window is\n * placed in the middle of the square.\n *\n * Since we might have arbitrary vector graphics\n * in our database, it makes sense to normalize them\n * by making them fit in a square so that they are \n * rendered properly on the browser.\n *\n * @param   {Object}  graphic - The SVG document representation.\n *\n * @return  {Object}  Graphic object whose height and width have\n * been made equal.\n */\nfunction normalizeGraphic(graphic) {\n  let { svg, paths, bboxes, defs } = graphic;\n  if (svg.properties.viewBox) {\n    const vb = extractViewBox(svg.properties.viewBox);\n    if (vb[2] < vb[3]) {\n      svg.properties.viewBox = `${vb[0] - (vb[3] - vb[2]) / 2} ${vb[1]} ${\n        vb[3]\n      } ${vb[3]}`;\n    } else {\n      svg.properties.viewBox = `${vb[0]} ${vb[1] - (vb[2] - vb[3]) / 2} ${\n        vb[2]\n      } ${vb[2]}`;\n    }\n  }\n  if (svg.properties.height && svg.properties.width) {\n    const h = extractDims(svg.properties.height);\n    const w = extractDims(svg.properties.width);\n    const max = Math.max(h, w);\n    svg.properties.height = max;\n    svg.properties.width = max;\n    svg.properties.viewBox = `0 0 ${max} ${max}`;\n  }\n  return { svg, paths, bboxes, defs };\n}\n\n/**\n * Find the bounding box of a path.\n *\n * 1. Create a temporary SVG element in browser. \n * 2. Add the path to that SVG element.\n * 3. Use the browser function getBBox to calculate\n *    the bounding box.\n * 4. Clean up the temporary element.\n *\n * @param   {Object}  path - SVG path.\n *\n * @return  {Object}  A bounding box for the path.\n */\nfunction findBBox(path, viewBox) {\n  const svgElement = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    \"svg\"\n  );\n  svgElement.setAttribute(\"id\", \"temp-svg\");\n  document.body.appendChild(svgElement);\n  const pathElement = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    path.tagName\n  );\n  for (const p in path.properties) {\n    pathElement.setAttribute(p, path.properties[p]);\n  }\n  svgElement.appendChild(pathElement);\n  const pathBox = svgElement.lastChild.getBoundingClientRect();\n  const { x, y, height, width } = pathBox; \n  const pt = convertCoordinates('temp-svg', x, y);  \n  const di = convertDimensions('temp-svg', width, height);\n  svgElement.removeChild(pathElement);\n  svgElement.remove();\n  return { ...pt, ...di };\n}\n\n/**\n * Extract the paths from SVG parse tree.\n *\n * While flattening the parse tree, it is ensured that the inherited properties\n * are set correctly.\n *\n * @param   {Object}  tree - SVG parse tree.\n *\n * @return  {Object}  The object consists of an svg and a paths\n * property. The svg property stores information about the whole\n * document. The paths property is a list of paths.\n */\nfunction flattenTree(tree) {\n  let stack = [];\n  let elements = [];\n  let defs = undefined;\n  const helper = node => {\n    if (node.tagName === \"defs\") {\n      defs = node;\n      return;\n    }\n    stack.push(node.properties);\n    const properties = stack.reduceRight(function(a, b) {\n      return { ...b, ...a };\n    });\n    let { children, ...rest } = node;\n    if (svgTags.includes(rest.tagName) || rest.tagName === \"svg\") {\n      rest.properties = properties;\n      elements.push(rest);\n    } \n    children.forEach(helper);\n    stack.pop();\n  };\n  helper(tree);\n  const paths = elements.slice(1); \n  return { svg: elements[0], paths, defs };\n}\n\n/**\n * Check whether bounding box is simply a point.\n * \n * Many times, the paths in the document will\n * have no geometry. Such paths are useless \n * for our purpose. \n *\n * We detect them by determining whether they\n * occupy 0 area or not. \n *\n * @param   {Object}  bbox - Bounding box.\n *\n * @return  {boolean} True if bounding box is simply a point.\n */\nfunction degenerateBBox(bbox) {\n  return bbox.width === 0 && bbox.height === 0;\n}\n\nfunction treeMap (node, fn) {\n  node = fn(node); \n  if (node.children) {\n    node.children = node.children.map(c => treeMap(c, fn));\n  }\n  return node;\n}\n\n/**\n * Process an SVG string.\n *\n * This function performs a bunch of operations\n * on the SVG string fetched from the database.\n *\n * 1. The string is parsed.\n * 2. The parse tree is flattened. We are only concerned\n *    with the paths in the SVG. Flattening the parse tree\n *    makes it more convenient to index the paths.\n * 3. Bounding boxes are computed for the paths.\n * 4. The SVG properties are converted to camel case\n *    so that they match React's requirements for \n *    jsx elements.\n * 5. Finally, the SVG is normalized to fit into a \n *    square viewbox.\n *\n * @param   {string}  svgString - SVG document as a string.\n *\n * @return  {object}  A graphic object having the SVG, it's\n * paths and their bounding boxes as properties.\n */\nfunction preprocessSVG(svgString) {\n  const parseTree = parse(svgString).children[0];\n  let { svg, paths, defs } = flattenTree(parseTree);\n  let bboxes = paths.map(path => findBBox(path, svg.properties.viewBox));\n  paths = paths.filter((_, i) => !degenerateBBox(bboxes[i]));\n  bboxes = bboxes.filter(b => !degenerateBBox(b));\n  svg = propertiesToCamelCase(svg);\n  if (typeof defs !== \"undefined\") {\n    defs = treeMap(defs, propertiesToCamelCase);\n  }\n  paths = paths.map(propertiesToCamelCase);\n  return normalizeGraphic({ svg, paths, bboxes, defs });\n}\n\n/**\n * Calculate a bounding box which covers all the input \n * bounding boxes.\n *\n * This function is used when we want to compute the \n * bounding box for a set of paths which have been \n * grouped by the user.\n *\n * @param   {Object}  bboxes - List of bounding boxes\n *\n * @return  {Object}  The smallest bounding box which\n * covers all bboxes.\n */\nfunction coveringBBox(bboxes) {\n  const x = Math.min(...bboxes.map(b => b.x));\n  const y = Math.min(...bboxes.map(b => b.y));\n  const maxX = Math.max(...bboxes.map(b => b.x + b.width));\n  const maxY = Math.max(...bboxes.map(b => b.y + b.height));\n  const height = maxY - y;\n  const width = maxX - x;\n  return { x, y, height, width };\n}\n\n/**\n * Calculate the center of a box.\n *\n * @param   {Object}  box - Must have x, y, width and height\n * properties.\n *\n * @return  {Object}  The center point as { cx, cy }\n */\nfunction boxCenter(box) {\n  const cx = box.x + box.width / 2;\n  const cy = box.y + box.height / 2;\n  return { cx, cy };\n}\n\n/**\n * Calculate euclidean distance between two points in 2D.\n *\n * @param   {Object}  a - Point a given as { x, y }.\n * @param   {Object}  b - Point b.\n *\n * @return  {Number}  Euclidean distance.\n */\nfunction distance(a, b) {\n  const d = { x: a.x - b.x, y: a.y - b.y };\n  return Math.sqrt(d.x * d.x + d.y * d.y);\n}\n\n/**\n * Convert coordinates from the document's\n * to the element's whose id is supplied.\n *\n * Used to convert event coordinates on a \n * particular element.\n *\n * @param   {string}  elementId - Id of element\n * @param   {Number}  x - x coordinate of the point.\n * @param   {Number}  y - y coordinate of the point.\n *\n * @return  {Object}  The transformed point with x and y\n * properties.\n */\nfunction convertCoordinates(elementId, x, y) {\n  const ctm = document.getElementById(elementId).getScreenCTM();\n  return { x: (x - ctm.e) / ctm.a, y: (y - ctm.f) / ctm.d };\n}\n\nfunction convertDimensions(elementId, width, height) {\n  const ctm = document.getElementById(elementId).getScreenCTM();\n  return { width : width / ctm.a, height: height / ctm.d };\n}\n\nfunction isStyleNotNone(styleProperty, properties) {\n  if (typeof properties[styleProperty] === \"undefined\") {\n    if (typeof properties.style === \"undefined\") return true;\n    else return properties.style[styleProperty].toLowerCase() !== \"none\";\n  }\n  return properties[styleProperty].toLowerCase() !== \"none\";\n}\n\nexport {\n  getWidthHeight,\n  preprocessSVG,\n  coveringBBox,\n  boxCenter,\n  distance,\n  convertCoordinates,\n  isStyleNotNone,\n};\n"],"sourceRoot":""}